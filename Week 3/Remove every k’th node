/*
You are given the head of a linked list and an integer k.
Your task is to remove every k’th node from the linked list and return the modified list.

Input: 1 → 2 → 3 → 4 → 5 → 6 → 7, k = 3
Output: 1 → 2 → 4 → 5 → 7
(3, 6 are removed since they are 3rd and 6th nodes)

*/


/*

function removeEveryKthNode(head, k):
    if head is null OR k == 0:
        return head
    if k == 1:
        return null   # remove all nodes

    current = head
    count = 1

    while current != null AND current.next != null:
        if count == k-1:
            # remove kth node
            current.next = current.next.next
            count = 0  # reset counter
        current = current.next
        count = count + 1

    return head


*/


class Node {
    int data;
    Node next;
    
    Node(int data) {
        this.data = data;
        this.next = null;
    }
}

public class Solution {
    public static Node removeEveryKthNode(Node head, int k) {
        if (head == null || k == 0) return head;
        if (k == 1) return null;  // remove all nodes

        Node current = head;
        int count = 1;

        while (current != null && current.next != null) {
            if (count == k - 1) {
                // Remove kth node
                current.next = current.next.next;
                count = 0; // reset counter
            }
            current = current.next;
            count++;
        }
        return head;
    }

    // Helper function to print linked list
    public static void printList(Node head) {
        Node temp = head;
        while (temp != null) {
            System.out.print(temp.data + " ");
            temp = temp.next;
        }
        System.out.println();
    }

    // Example usage
    public static void main(String[] args) {
        Node head = new Node(1);
        head.next = new Node(2);
        head.next.next = new Node(3);
        head.next.next.next = new Node(4);
        head.next.next.next.next = new Node(5);
        head.next.next.next.next.next = new Node(6);
        head.next.next.next.next.next.next = new Node(7);

        System.out.print("Original list: ");
        printList(head);

        head = removeEveryKthNode(head, 3);

        System.out.print("Modified list: ");
        printList(head);
    }
}
