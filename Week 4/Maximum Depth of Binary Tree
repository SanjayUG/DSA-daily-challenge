/*
Given the root of a binary tree, return its maximum depth.

The maximum depth is the number of nodes along the longest path from the root down to the farthest leaf.


*/


/*
function maxDepth(node):
    if node == null:
        return 0
    return 1 + max(maxDepth(node.left), maxDepth(node.right))



*/


class TreeNode {
    int val;
    TreeNode left, right;
    TreeNode(int val) { this.val = val; }
}

class Solution {
    public int maxDepth(TreeNode root) {
        if (root == null) return 0;
        return 1 + Math.max(maxDepth(root.left), maxDepth(root.right));
    }
}
