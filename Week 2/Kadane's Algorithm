/*
Given an integer array arr[] (can contain positive, negative, and zero), find the maximum possible sum of a contiguous subarray.


*/


/*
function kadane(arr):
    maxSoFar = -âˆž
    currentSum = 0

    for each num in arr:
        currentSum = max(num, currentSum + num)
        maxSoFar = max(maxSoFar, currentSum)

    return maxSoFar



*/


public class Kadane {
    public static int maxSubArray(int[] nums) {
        int maxSoFar = nums[0];
        int currentSum = nums[0];

        for (int i = 1; i < nums.length; i++) {
            currentSum = Math.max(nums[i], currentSum + nums[i]);
            maxSoFar = Math.max(maxSoFar, currentSum);
        }

        return maxSoFar;
    }

    // Demo
    public static void main(String[] args) {
        int[] arr = {-2, 1, -3, 4, -1, 2, 1, -5, 4};
        System.out.println("Maximum Subarray Sum = " + maxSubArray(arr)); // 6
    }
}
